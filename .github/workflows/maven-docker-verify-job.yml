# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package and docker build and push and verify

on:
  push:
    branches:
    - main

jobs:
  maven:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        cache: 'maven'

    - name: Build with Maven
      run: mvn package
    - name: upload jar for next job
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: '${{ github.workspace }}/target/*.jar'
        
  docker:
    runs-on: ubuntu-latest
    needs: maven
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Download artifact 
      uses: actions/download-artifact@v4
      with:
        name: app

    - name: Docker login
      run: docker login ghcr.io -u venclibalazs -p ${{ github.token }}
    - name: Docker build
      run: docker build . -t ghcr.io/venclibalazs/cubix/1/homework/app:springboot
    - name: Docker publish
      run: docker push ghcr.io/venclibalazs/cubix/1/homework/app:springboot

  verify:
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: read
      packages: write

    steps:
    - name: Build with Maven
      run: |
        docker run -d --name test -p 8080:8080 ghcr.io/venclibalazs/cubix/1/homework/app:springboot > /dev/null
        sleep 10
        curl --fail http://localhost:8080/cubix/test
        RESULT=$?
        if [ $RESULT -ne 0 ]; then
          echo "Verification failed, here are the logs"
          docker logs test
        fi
        docker stop test > /dev/null
        docker rm test > /dev/null
        exit $RESULT
